name: Deploy To Prod

on:
  push:
    branches:
      - prod

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.REMOTE_SERVER_IP }} >> ~/.ssh/known_hosts
        shell: bash

      - name: Debug SSH Private Key
        run: |
          echo "Private key: ${SSH_PRIVATE_KEY}"
          ls -la ~/.ssh
          cat ~/.ssh/id_rsa
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Get Git Revision Count
        id: revision
        run: echo "REVISION=$(git rev-list --count prod)" >> $GITHUB_ENV

      - name: Build Docker Images
        run: |
          docker build -f Dockerfile.prod.host -t host:${{ env.REVISION }} .
          docker build -f Dockerfile.prod.catalog -t catalog:${{ env.REVISION }} .
          docker build -f Dockerfile.prod.shopping -t shopping:${{ env.REVISION }} .

      - name: Save Docker Images
        run: |
          docker save -o host-${{ env.REVISION }}.tar host:${{ env.REVISION }}
          docker save -o catalog-${{ env.REVISION }}.tar catalog:${{ env.REVISION }}
          docker save -o shopping-${{ env.REVISION }}.tar shopping:${{ env.REVISION }}

      - name: Transfer Images to Server
        run: |
          set -e
          scp -o StrictHostKeyChecking=no host-${{ env.REVISION }}.tar catalog-${{ env.REVISION }}.tar shopping-${{ env.REVISION }}.tar ${{ secrets.REMOTE_USERNAME }}@${{ secrets.REMOTE_SERVER_IP }}:/app/tar

      - name: Load Images and Deploy Stack
        run: |
          set -e
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USERNAME }}@${{ secrets.REMOTE_SERVER_IP }} << EOF
          docker load -i /app/tar/host-${{ env.REVISION }}.tar
          docker load -i /app/tar/catalog-${{ env.REVISION }}.tar
          docker load -i /app/tar/shopping-${{ env.REVISION }}.tar

          sed -i "s|image: host:.*|image: host:${{ env.REVISION }}|" /app/docker-compose.yml
          sed -i "s|image: catalog:.*|image: catalog:${{ env.REVISION }}|" /app/docker-compose.yml
          sed -i "s|image: shopping:.*|image: shopping:${{ env.REVISION }}|" /app/docker-compose.yml

          cd docker
          docker compose down
          docker compose up -d

          # Cleanup
          rm /app/tar/*.tar
          EOF
